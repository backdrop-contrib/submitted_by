<?php

/**
 * @file
 * Take over the "Submitted by" theme function to allow different
 * content types to have different strings.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Add the pattern field to the node edit form.
 */
function submitted_by_form_node_type_form_alter(&$form, &$form_state) {
  $type = isset($form['#node_type']->type) ? $form['#node_type']->type : '';
  $current_value = variable_get('submitted_by_' . $type, NULL);
  $enabled = variable_get('node_submitted_' . $type, TRUE);

  if (isset($form['type'])) {
    $form['display']['submitted_by'] = array(
      '#type' => 'container',
      '#states' => array(
        'invisible' => array(
          'input[name="node_submitted"]' => array('checked' => FALSE),
        ),
      ),
    );

    // Note: node module will add "_type" to the variable name.
    $form['display']['submitted_by']['submitted_by'] = array(
      '#type' => 'textfield',
      '#maxlength' => 255,
      '#title' => t("Byline text"),
      '#default_value' => $enabled ? $current_value : NULL,
      '#description' => t("When a node is displayed, text in this box will be used to override the normal byline attribution and date-posted text. Default is \"Submitted by [node:author] on [node:created]\""),
    );
    $form['display']['submitted_by']['token_help'] = array(
      '#theme' => 'token_tree',
      '#token_types' => array('node'),
    );

    if (isset($form['comment'])) {
      $form['comment']['submitted_by'] = array(
        '#type' => 'container',
      );
      $form['comment']['submitted_by']['submitted_by_comment'] = array(
        '#type' => 'textfield',
        '#maxlength' => 255,
        '#title' => t("Byline text"),
        '#default_value' => variable_get('submitted_by_comment_' . $type, NULL),
        '#description' => t("When a comment is displayed, text in this box will be used to override the normal byline attribution and date-posted text. Default is \"Submitted by [node:author] on [node:created]\""),
      );
      $form['comment']['submitted_by']['token_help'] = array(
        '#theme' => 'token_tree',
        '#token_types' => array('comment'),
      );
    }
  }
}

/**
 * Implements hook_process_node().
 *
 * Use hook_process_node() rather than hook_preprocess_node() as themes might
 * override the submitted variable unconditionally.
 */
function submitted_by_process_node(&$variables) {
  $submitted_by = variable_get('submitted_by_' . $variables['node']->type, NULL);
  if ($submitted_by) {
    $variables['submitted'] = token_replace($submitted_by, array('node' => $variables['node']));
  }
}

/**
 * Implements hook_process_comment().
 *
 * Use hook_process_comment() rather than hook_preprocess_comment() as themes
 * might override the submitted variable unconditionally.
 */
function submitted_by_process_comment(&$variables) {
  $submitted_by = variable_get('submitted_by_comment_' . $variables['node']->type, NULL);
  if ($submitted_by) {
    $variables['submitted'] = token_replace($submitted_by, array('comment' => $variables['comment'], 'node' => $variables['node']));
  }
}
